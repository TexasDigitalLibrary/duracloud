<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">

  <!--
    A lot of Spring conventions here.
    This element wires together the
      authentication-manager, 
      access-decision-manager,
      various servlet filters (including basic-auth, anonymous, and exception-translation)
   -->
  <http access-decision-manager-ref="duraAccessDecisionManager"
        realm="DuraCloud:DuraBoss">

    <intercept-url pattern="/security" access="ROLE_ROOT"/>

    <intercept-url pattern="/init" method="GET" access="ROLE_ANONYMOUS, ROLE_USER"/>
    <intercept-url pattern="/init" method="POST" access="ROLE_ROOT"/>

    <intercept-url pattern="/**" method="GET" access="ROLE_ADMIN"/>
    <intercept-url pattern="/**" method="POST" access="ROLE_ROOT"/>
    <intercept-url pattern="/**" method="DELETE" access="ROLE_ROOT"/>

    <anonymous />
    <http-basic />
    <logout logout-url="/logout" />
  </http>

  <!-- The decision-voters here contribute to the AuthZ decision -->
  <beans:bean id="duraAccessDecisionManager" class="org.duracloud.security.vote.AccessDecisionManagerImpl">
    <beans:property name="allowIfAllAbstainDecisions" value="false"/>
    <beans:property name="decisionVoters">
      <beans:list>
        <beans:bean class="org.duracloud.security.vote.RoleVoterImpl" />
        <beans:bean class="org.duracloud.security.vote.UserIpLimitsAccessVoter" />
      </beans:list>
    </beans:property>
  </beans:bean>

  <!-- AuthN Manager-->
  <authentication-manager alias="authenticationManager" erase-credentials="false">
    <authentication-provider user-service-ref="userDetailsSvc">
      <password-encoder ref="passwordEncoder" />
    </authentication-provider>
    <authentication-provider user-service-ref="userDetailsSvc" />
  </authentication-manager>
  
  <beans:bean id="userDetailsSvc" class="org.duracloud.security.impl.UserDetailsServiceImpl"/>

  <beans:bean id="passwordEncoder"
      class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" >
   <beans:constructor-arg value="256"/>
  </beans:bean>

</beans:beans>